/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.gerenciador.views.adm;

import br.com.gerenciador.dao.Horario_AulasDao;
import br.com.gerenciador.dao.TurmasDao;
import br.com.gerenciador.entidades.Horario_Aulas;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.awt.Dimension;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Victor M
 */
public class Relatorio_HorarioAulas extends javax.swing.JInternalFrame {

    /**
     * Creates new form Relatorio_HorarioAulas
     */
    public Relatorio_HorarioAulas() {
        initComponents();
        preencherTurmas();
    }

    public void setPosition() {

        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);

    }

    public void preencherTurmas() {
        TurmasDao td = new TurmasDao();
        String turma[] = td.preencherComboBoxTurma();
        jComboBoxTurma.removeAllItems();
        jComboBoxTurma.addItem("Todas as turmas");
        for (int i = 0; i < turma.length; i++) {
            jComboBoxTurma.addItem(turma[i]);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBoxTurma = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setClosable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jComboBoxTurma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxTurma.setName(""); // NOI18N

        jButton1.setText("Gerar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jComboBoxTurma, 0, 146, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Document doc = new Document();

        if (jComboBoxTurma.getSelectedItem() == "Todas as turmas") {
            String arquivoPdf = "HorarioGeral.pdf";

            TurmasDao td = new TurmasDao();
            String turma[] = td.preencherComboBoxTurma();
            try {
                PdfWriter.getInstance(doc, new FileOutputStream(arquivoPdf));
            } catch (DocumentException | FileNotFoundException ex) {
                Logger.getLogger(Relatorio_HorarioAulas.class.getName()).log(Level.SEVERE, null, ex);
            }

            doc.open();
            
            for (int i = 0; i < turma.length; i++) {
                try {

                    Paragraph p = new Paragraph("Horário de Aulas do " + turma[i]);
                    p.setAlignment(1);
                    doc.add(p);
                    p = new Paragraph(" ");
                    doc.add(p);

                    PdfPTable table = new PdfPTable(6);

                    PdfPCell cel1 = new PdfPCell(new Paragraph("Aula"));
                    PdfPCell cel2 = new PdfPCell(new Paragraph("Segunda"));
                    PdfPCell cel3 = new PdfPCell(new Paragraph("Terça"));
                    PdfPCell cel4 = new PdfPCell(new Paragraph("Quarta"));
                    PdfPCell cel5 = new PdfPCell(new Paragraph("Quinta"));
                    PdfPCell cel6 = new PdfPCell(new Paragraph("Sexta"));

                    table.addCell(cel1);
                    table.addCell(cel2);
                    table.addCell(cel3);
                    table.addCell(cel4);
                    table.addCell(cel5);
                    table.addCell(cel6);

                    Horario_AulasDao had = new Horario_AulasDao();
                    for (Horario_Aulas ha : had.readHorario(turma[i])) {
                        cel1 = new PdfPCell(new Paragraph(ha.getNum_aula()));
                        cel2 = new PdfPCell(new Paragraph(ha.getSegunda()));
                        cel3 = new PdfPCell(new Paragraph(ha.getTerca()));
                        cel4 = new PdfPCell(new Paragraph(ha.getQuarta()));
                        cel5 = new PdfPCell(new Paragraph(ha.getQuinta()));
                        cel6 = new PdfPCell(new Paragraph(ha.getSexta()));

                        table.addCell(cel1);
                        table.addCell(cel2);
                        table.addCell(cel3);
                        table.addCell(cel4);
                        table.addCell(cel5);
                        table.addCell(cel6);
                    }
                    doc.add(table);
                    p = new Paragraph(" ");
                    doc.add(p);
                    p = new Paragraph(" ");
                    doc.add(p);

                } catch (DocumentException ex) {
                    System.out.println(ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Principal_Diretor.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
            doc.close();

            try {
                Desktop.getDesktop().open(new File(arquivoPdf));
            } catch (IOException ex) {
                Logger.getLogger(Relatorio_HorarioAulas.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            String turma = jComboBoxTurma.getSelectedItem().toString();
            String arquivoPdf = turma + ".pdf";
            try {
                PdfWriter.getInstance(doc, new FileOutputStream(arquivoPdf));

                doc.open();

                Paragraph p = new Paragraph("Horário de Aulas do " + turma);
                p.setAlignment(1);
                doc.add(p);
                p = new Paragraph(" ");
                doc.add(p);

                PdfPTable table = new PdfPTable(6);

                PdfPCell cel1 = new PdfPCell(new Paragraph("Aula"));
                PdfPCell cel2 = new PdfPCell(new Paragraph("Segunda"));
                PdfPCell cel3 = new PdfPCell(new Paragraph("Terça"));
                PdfPCell cel4 = new PdfPCell(new Paragraph("Quarta"));
                PdfPCell cel5 = new PdfPCell(new Paragraph("Quinta"));
                PdfPCell cel6 = new PdfPCell(new Paragraph("Sexta"));

                table.addCell(cel1);
                table.addCell(cel2);
                table.addCell(cel3);
                table.addCell(cel4);
                table.addCell(cel5);
                table.addCell(cel6);

                Horario_AulasDao had = new Horario_AulasDao();
                for (Horario_Aulas ha : had.readHorario(turma)) {
                    cel1 = new PdfPCell(new Paragraph(ha.getNum_aula()));
                    cel2 = new PdfPCell(new Paragraph(ha.getSegunda()));
                    cel3 = new PdfPCell(new Paragraph(ha.getTerca()));
                    cel4 = new PdfPCell(new Paragraph(ha.getQuarta()));
                    cel5 = new PdfPCell(new Paragraph(ha.getQuinta()));
                    cel6 = new PdfPCell(new Paragraph(ha.getSexta()));

                    table.addCell(cel1);
                    table.addCell(cel2);
                    table.addCell(cel3);
                    table.addCell(cel4);
                    table.addCell(cel5);
                    table.addCell(cel6);
                }

                doc.add(table);

                doc.close();

                Desktop.getDesktop().open(new File(arquivoPdf));

            } catch (DocumentException | FileNotFoundException ex) {
                System.out.println(ex);
            } catch (IOException ex) {
                System.out.println(ex);
            } catch (SQLException ex) {
                Logger.getLogger(Principal_Diretor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBoxTurma;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
